package TDAColaCP;
import java.util.Comparator;
import Exceptions.*;
import TDAMapeo.Entrada;

public class Heap<K,V> implements PriorityQueue<K,V> {
	
	protected Entrada<K,V>[] elems;
	protected Comparator<K> comp;
	protected int size;
	
	public Heap(int maxElems, Comparator<K> comp) {
		elems= (Entrada<K,V>[])  new Entrada[maxElems];
		this.comp= comp;
		size= 0;
	}
	public int size() {
		return size;
	}
	public boolean isEmpty() {
		return size==0;
	}
	public Entry<K,V>min() throws EmptyPriorityQueueException{
		if(isEmpty())
			throw new EmptyPriorityQueueException();
		return elemens[1];
	}
}
