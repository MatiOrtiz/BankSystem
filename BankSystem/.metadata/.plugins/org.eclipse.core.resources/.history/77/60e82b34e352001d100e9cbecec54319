package TDALista;
import Position;

public class DNodo<E> implements Position<E> {

	private E elem;
	private DNodo<E> next, prev;

	/**
	 * Crea una instancia de clase DNodo
	 * @param p Nodo previo
	 * @param n Nodo siguiente
	 * @param e Elemento a insertar en el nuevo nodo
	 */
	public DNodo(DNodo<E> p, DNodo<E> n, E e) {
		prev = p;
		next = n;
		elem = e;
	}
	
	/**
	 * Crea una instancia de clase DNodo
	 * @param e Elemento a insertar en el nuevo nodo
	 */
	public DNodo(E e) {
		this(null, null, e);
	}

	/**
	 * Devuelve el elemento E almacenado en el nodo
	 */
	public E element() {
		return elem;
	}

	/**
	 * Devuelve el nodo previo al nodo en cuestión
	 * @return Nodo previo
	 */
	public DNodo<E> getPrev() {
		return prev;
	}

	/**
	 * Devuelve el nodo siguiente al nodo en cuestión
	 * @return Nodo siguiente
	 */
	public DNodo<E> getNext() {
		return next;
	}

	/**
	 * Inserta un elemento al nodo
	 * @param e Elemento a insertar en el nodo
	 */
	public void setElemento(E e) {
		elem = e;
	}

	/**
	 * Establece un nuevo nodo siguiente
	 * @param n Nodo siguiente
	 */
	public void setNext(DNodo<E> n) {
		next = n;
	}
	
	/**
	 * Establece un nuevo nodo previo
	 * @param p Nodo previo
	 */
	public void setPrev(DNodo<E> p) {
		prev = p;
	}

}
